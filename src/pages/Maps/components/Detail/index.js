import React, {Component} from 'react';
import {bindActionCreators} from 'redux';
import {connect} from 'react-redux';
import {withNavigation} from 'react-navigation';
import {
  Image,
  View,
  ScrollView,
  Platform,
  UIManager,
  LayoutAnimation,
  Dimensions,
} from 'react-native';
import ReadMore from 'react-native-read-more-text';
import {Button, ThemeProvider, Text} from 'react-native-elements';
import {Creators as DetailCreators} from '../../../../store/ducks/detail';
import {RFPercentage, RFValue} from 'react-native-responsive-fontsize';
import styles from './style-detail.js';
import Carousel from 'react-native-snap-carousel';
import SliderEntry from './SliderEntry';
import {Path, Svg} from 'react-native-svg';
import Expandable_ListView from './Accordion';

const {width: viewportWidth, height: viewportHeight} = Dimensions.get('window');

class Detail extends Component<Props, State> {
  constructor(props) {
    super(props);
    if (Platform.OS === 'android') {
      UIManager.setLayoutAnimationEnabledExperimental(true);
    }
    this.state = {
      position: 1,
      interval: null,
      dataSource: [],
      AccordionData: [],
    };
  }

  componentWillMount(): void {
    const full = [];
    const da = this.props.navigation.state.params.item.full_info;

    for (let keyx in Object.keys(da)) {
      let c = Object.keys(da);
      full.push(da[c[keyx]]);
    }

    this.setState({
      AccordionData: [
        {
          expanded: false,
          category_Name: 'Amenities',
          sub_Category: this.props.navigation.state.params.item.amenities,
        },
        {
          expanded: false,
          category_Name: 'Facts & Features',
          sub_Category: full,
        },
        {
          expanded: false,
          category_Name: 'Facilities',
          sub_Category: this.props.navigation.state.params.item.facilities,
        },
      ],
    });
  }

  _renderItem({item, index}) {
    return <SliderEntry data={item} even={(index + 1) % 2 === 0} />;
  }

  renIcon = (item, key) => {
    switch (key) {
      case 'amountrooms':
        return (
          <Svg
            width={RFPercentage(2)}
            height={RFPercentage(2)}
            viewBox="0 0 16 13"
            fill="none"
            xmlns="http://www.w3.org/2000/svg">
            <Path
              d="M15.2998 12.22C15.1011 12.22 14.9024 12.1207 14.8031 12.0213C14.7037 11.922 14.6044 11.7233 14.6044 11.5246V8.94146H1.49024V11.5246C1.49024 11.7233 1.39089 11.922 1.29154 12.0213C1.1922 12.1207 0.993496 12.22 0.794797 12.22C0.596098 12.22 0.397398 12.1207 0.298049 12.0213C0.0993496 11.8226 0 11.7233 0 11.5246V0.695447C0 0.496748 0.0993496 0.298049 0.198699 0.198699C0.397398 0.0993496 0.496748 0 0.695447 0C0.894146 0 1.09285 0.0993496 1.1922 0.198699C1.29154 0.298049 1.39089 0.496748 1.39089 0.695447V7.45122H8.24602V2.38439C8.24602 2.18569 8.34537 1.98699 8.44471 1.88764C8.54406 1.78829 8.74276 1.68894 8.94146 1.68894H13.6109C14.207 1.68894 14.8031 1.88764 15.2998 2.38439C15.7966 2.88114 15.9953 3.47724 15.9953 4.07333V11.5246C15.9953 11.7233 15.8959 11.922 15.7966 12.0213C15.6972 12.1207 15.4985 12.22 15.2998 12.22ZM9.73626 7.45122H14.6044V4.07333C14.6044 3.87463 14.505 3.57659 14.3063 3.37789C14.1076 3.17919 13.9089 3.07984 13.6109 3.07984H9.73626V7.45122ZM4.86813 6.45772C4.27203 6.45772 3.67593 6.25902 3.17919 5.76228C2.68244 5.26553 2.48374 4.66943 2.48374 4.07333C2.48374 3.57659 2.58309 3.17919 2.88114 2.78179C3.17919 2.28504 3.47724 1.98699 3.97398 1.78829C4.27203 1.68894 4.57008 1.58959 4.86813 1.58959C5.06683 1.58959 5.16618 1.58959 5.36488 1.58959C5.76228 1.78829 6.25902 1.98699 6.55707 2.38439C6.85512 2.78179 7.15317 3.17919 7.25252 3.57659C7.35187 4.07333 7.25252 4.47073 7.15317 4.96748C6.85512 5.36488 6.55707 5.76228 6.15967 6.06033C5.76228 6.25902 5.36488 6.45772 4.86813 6.45772ZM4.86813 3.07984C4.57008 3.07984 4.37138 3.17919 4.17268 3.37789C4.07333 3.57659 3.97398 3.77528 3.97398 4.07333C3.97398 4.27203 3.97398 4.37138 4.07333 4.57008C4.17268 4.76878 4.27203 4.86813 4.47073 4.86813C4.66943 4.96748 4.76878 4.96748 4.86813 4.96748C4.96748 4.96748 4.96748 4.96748 5.06683 4.96748C5.26553 4.96748 5.36488 4.86813 5.56358 4.66943C5.66293 4.57008 5.76228 4.37138 5.86163 4.17268C5.86163 3.97398 5.86163 3.77528 5.76228 3.67594C5.66293 3.47724 5.56358 3.37789 5.36488 3.27854C5.26553 3.17919 5.06683 3.07984 4.86813 3.07984Z"
              fill="#AEB3BA"
            />
          </Svg>
        );
      case 'areasize':
        return (
          <Svg
            width={RFPercentage(2)}
            height={RFPercentage(2)}
            viewBox="0 0 12 12"
            fill="none"
            xmlns="http://www.w3.org/2000/svg">
            <Path
              d="M11.4 0H0.6C0.44087 0 0.288258 0.0632141 0.175736 0.175736C0.0632141 0.288258 0 0.44087 0 0.6V11.4C0 11.5591 0.0632141 11.7117 0.175736 11.8243C0.288258 11.9368 0.44087 12 0.6 12H4.2C4.35913 12 4.51174 11.9368 4.62426 11.8243C4.73679 11.7117 4.8 11.5591 4.8 11.4V4.8H11.4C11.5591 4.8 11.7117 4.73679 11.8243 4.62426C11.9368 4.51174 12 4.35913 12 4.2V0.6C12 0.44087 11.9368 0.288258 11.8243 0.175736C11.7117 0.0632141 11.5591 0 11.4 0ZM10.8 3.6H9.6V3C9.6 2.84087 9.53679 2.68826 9.42426 2.57574C9.31174 2.46321 9.15913 2.4 9 2.4C8.84087 2.4 8.68826 2.46321 8.57574 2.57574C8.46321 2.68826 8.4 2.84087 8.4 3V3.6H7.2V3C7.2 2.84087 7.13679 2.68826 7.02426 2.57574C6.91174 2.46321 6.75913 2.4 6.6 2.4C6.44087 2.4 6.28826 2.46321 6.17574 2.57574C6.06321 2.68826 6 2.84087 6 3V3.6H4.8V3C4.8 2.84087 4.73679 2.68826 4.62426 2.57574C4.51174 2.46321 4.35913 2.4 4.2 2.4C4.04087 2.4 3.88826 2.46321 3.77574 2.57574C3.66321 2.68826 3.6 2.84087 3.6 3V3.6H3C2.84087 3.6 2.68826 3.66321 2.57574 3.77574C2.46321 3.88826 2.4 4.04087 2.4 4.2C2.4 4.35913 2.46321 4.51174 2.57574 4.62426C2.68826 4.73679 2.84087 4.8 3 4.8H3.6V6H3C2.84087 6 2.68826 6.06321 2.57574 6.17574C2.46321 6.28826 2.4 6.44087 2.4 6.6C2.4 6.75913 2.46321 6.91174 2.57574 7.02426C2.68826 7.13679 2.84087 7.2 3 7.2H3.6V8.4H3C2.84087 8.4 2.68826 8.46321 2.57574 8.57574C2.46321 8.68826 2.4 8.84087 2.4 9C2.4 9.15913 2.46321 9.31174 2.57574 9.42426C2.68826 9.53679 2.84087 9.6 3 9.6H3.6V10.8H1.2V1.2H10.8V3.6Z"
              fill="#9BA0A6"
            />
          </Svg>
        );
      case 'bathrooms':
        return (
          <Svg
            width={RFPercentage(2)}
            height={RFPercentage(2)}
            viewBox="0 0 15 12"
            fill="none"
            xmlns="http://www.w3.org/2000/svg">
            <Path
              d="M9.9375 12C9.75 12 9.5625 11.9062 9.46875 11.8125C9.375 11.7188 9.28125 11.5312 9.28125 11.3438V11.25H5.25V11.3438C5.25 11.5312 5.15625 11.625 5.0625 11.8125C4.96875 11.9062 4.78125 12 4.59375 12C4.40625 12 4.21875 11.9062 4.125 11.8125C4.03125 11.7188 3.9375 11.5312 3.9375 11.3438V11.0625H3.84375C2.90625 10.7812 2.15625 10.2188 1.59375 9.5625C1.03125 8.90625 0.75 8.0625 0.75 7.21875V6.375H0.65625C0.46875 6.375 0.28125 6.28125 0.1875 6.1875C0.09375 6.09375 0 6 0 5.8125C0 5.625 0.09375 5.53125 0.1875 5.34375C0.28125 5.25 0.46875 5.15625 0.65625 5.15625H0.75V2.71875C0.75 2.15625 0.9375 1.5 1.40625 1.03125C1.78125 0.5625 2.4375 0.1875 3 0.09375C3.28125 0 3.5625 0 3.84375 0C4.21875 0 4.6875 0.09375 5.0625 0.1875C5.625 0.46875 6.09375 0.84375 6.46875 1.40625C7.03125 1.5 7.5 1.78125 7.875 2.0625C8.25 2.4375 8.4375 2.90625 8.4375 3.375V4.6875H3.9375V3.375C3.9375 2.71875 4.3125 2.0625 4.96875 1.6875L5.0625 1.59375H4.875C4.6875 1.40625 4.40625 1.3125 4.03125 1.21875C3.9375 1.21875 3.84375 1.21875 3.75 1.21875C3.5625 1.21875 3.28125 1.21875 3.09375 1.3125C2.8125 1.5 2.625 1.6875 2.4375 1.875C2.25 2.15625 2.15625 2.4375 2.15625 2.71875V5.25H13.7812C13.9687 5.25 14.1562 5.34375 14.25 5.4375C14.3437 5.53125 14.4375 5.71875 14.4375 5.90625C14.4375 6.09375 14.3437 6.1875 14.25 6.375C14.1562 6.46875 13.9687 6.5625 13.7812 6.5625H13.6875V7.3125C13.6875 8.15625 13.4062 9 12.8437 9.65625C12.2812 10.3125 11.5312 10.875 10.5937 11.1562H10.5V11.4375C10.5 11.625 10.4062 11.7188 10.3125 11.9062C10.3125 11.9062 10.125 12 9.9375 12ZM2.15625 7.21875C2.15625 7.96875 2.53125 8.71875 3.09375 9.28125C3.65625 9.84375 4.5 10.125 5.34375 10.125H9.09375C9.9375 10.125 10.7812 9.84375 11.3438 9.28125C11.9062 8.71875 12.2812 7.96875 12.2812 7.21875V6.375H2.15625V7.21875ZM7.03125 3.46875V3.375C7.03125 3.1875 6.9375 3 6.75 2.8125C6.5625 2.71875 6.375 2.625 6.1875 2.625C5.90625 2.625 5.71875 2.71875 5.53125 2.8125C5.34375 3 5.25 3.1875 5.25 3.375V3.46875H7.03125Z"
              fill="#9BA0A6"
            />
          </Svg>
        );
      case 'bedrooms':
        return (
          <Svg
            width={RFPercentage(2)}
            height={RFPercentage(2)}
            viewBox="0 0 16 13"
            fill="none"
            xmlns="http://www.w3.org/2000/svg">
            <Path
              d="M15.2998 12.22C15.1011 12.22 14.9024 12.1207 14.8031 12.0213C14.7037 11.922 14.6044 11.7233 14.6044 11.5246V8.94146H1.49024V11.5246C1.49024 11.7233 1.39089 11.922 1.29154 12.0213C1.1922 12.1207 0.993496 12.22 0.794797 12.22C0.596098 12.22 0.397398 12.1207 0.298049 12.0213C0.0993496 11.8226 0 11.7233 0 11.5246V0.695447C0 0.496748 0.0993496 0.298049 0.198699 0.198699C0.397398 0.0993496 0.496748 0 0.695447 0C0.894146 0 1.09285 0.0993496 1.1922 0.198699C1.29154 0.298049 1.39089 0.496748 1.39089 0.695447V7.45122H8.24602V2.38439C8.24602 2.18569 8.34537 1.98699 8.44471 1.88764C8.54406 1.78829 8.74276 1.68894 8.94146 1.68894H13.6109C14.207 1.68894 14.8031 1.88764 15.2998 2.38439C15.7966 2.88114 15.9953 3.47724 15.9953 4.07333V11.5246C15.9953 11.7233 15.8959 11.922 15.7966 12.0213C15.6972 12.1207 15.4985 12.22 15.2998 12.22ZM9.73626 7.45122H14.6044V4.07333C14.6044 3.87463 14.505 3.57659 14.3063 3.37789C14.1076 3.17919 13.9089 3.07984 13.6109 3.07984H9.73626V7.45122ZM4.86813 6.45772C4.27203 6.45772 3.67593 6.25902 3.17919 5.76228C2.68244 5.26553 2.48374 4.66943 2.48374 4.07333C2.48374 3.57659 2.58309 3.17919 2.88114 2.78179C3.17919 2.28504 3.47724 1.98699 3.97398 1.78829C4.27203 1.68894 4.57008 1.58959 4.86813 1.58959C5.06683 1.58959 5.16618 1.58959 5.36488 1.58959C5.76228 1.78829 6.25902 1.98699 6.55707 2.38439C6.85512 2.78179 7.15317 3.17919 7.25252 3.57659C7.35187 4.07333 7.25252 4.47073 7.15317 4.96748C6.85512 5.36488 6.55707 5.76228 6.15967 6.06033C5.76228 6.25902 5.36488 6.45772 4.86813 6.45772ZM4.86813 3.07984C4.57008 3.07984 4.37138 3.17919 4.17268 3.37789C4.07333 3.57659 3.97398 3.77528 3.97398 4.07333C3.97398 4.27203 3.97398 4.37138 4.07333 4.57008C4.17268 4.76878 4.27203 4.86813 4.47073 4.86813C4.66943 4.96748 4.76878 4.96748 4.86813 4.96748C4.96748 4.96748 4.96748 4.96748 5.06683 4.96748C5.26553 4.96748 5.36488 4.86813 5.56358 4.66943C5.66293 4.57008 5.76228 4.37138 5.86163 4.17268C5.86163 3.97398 5.86163 3.77528 5.76228 3.67594C5.66293 3.47724 5.56358 3.37789 5.36488 3.27854C5.26553 3.17919 5.06683 3.07984 4.86813 3.07984Z"
              fill="#AEB3BA"
            />
          </Svg>
        );
      case 'builtyear':
        return (
          <Svg
            width={RFPercentage(2)}
            height={RFPercentage(2)}
            viewBox="0 0 16 13"
            fill="none"
            xmlns="http://www.w3.org/2000/svg">
            <Path
              d="M15.2998 12.22C15.1011 12.22 14.9024 12.1207 14.8031 12.0213C14.7037 11.922 14.6044 11.7233 14.6044 11.5246V8.94146H1.49024V11.5246C1.49024 11.7233 1.39089 11.922 1.29154 12.0213C1.1922 12.1207 0.993496 12.22 0.794797 12.22C0.596098 12.22 0.397398 12.1207 0.298049 12.0213C0.0993496 11.8226 0 11.7233 0 11.5246V0.695447C0 0.496748 0.0993496 0.298049 0.198699 0.198699C0.397398 0.0993496 0.496748 0 0.695447 0C0.894146 0 1.09285 0.0993496 1.1922 0.198699C1.29154 0.298049 1.39089 0.496748 1.39089 0.695447V7.45122H8.24602V2.38439C8.24602 2.18569 8.34537 1.98699 8.44471 1.88764C8.54406 1.78829 8.74276 1.68894 8.94146 1.68894H13.6109C14.207 1.68894 14.8031 1.88764 15.2998 2.38439C15.7966 2.88114 15.9953 3.47724 15.9953 4.07333V11.5246C15.9953 11.7233 15.8959 11.922 15.7966 12.0213C15.6972 12.1207 15.4985 12.22 15.2998 12.22ZM9.73626 7.45122H14.6044V4.07333C14.6044 3.87463 14.505 3.57659 14.3063 3.37789C14.1076 3.17919 13.9089 3.07984 13.6109 3.07984H9.73626V7.45122ZM4.86813 6.45772C4.27203 6.45772 3.67593 6.25902 3.17919 5.76228C2.68244 5.26553 2.48374 4.66943 2.48374 4.07333C2.48374 3.57659 2.58309 3.17919 2.88114 2.78179C3.17919 2.28504 3.47724 1.98699 3.97398 1.78829C4.27203 1.68894 4.57008 1.58959 4.86813 1.58959C5.06683 1.58959 5.16618 1.58959 5.36488 1.58959C5.76228 1.78829 6.25902 1.98699 6.55707 2.38439C6.85512 2.78179 7.15317 3.17919 7.25252 3.57659C7.35187 4.07333 7.25252 4.47073 7.15317 4.96748C6.85512 5.36488 6.55707 5.76228 6.15967 6.06033C5.76228 6.25902 5.36488 6.45772 4.86813 6.45772ZM4.86813 3.07984C4.57008 3.07984 4.37138 3.17919 4.17268 3.37789C4.07333 3.57659 3.97398 3.77528 3.97398 4.07333C3.97398 4.27203 3.97398 4.37138 4.07333 4.57008C4.17268 4.76878 4.27203 4.86813 4.47073 4.86813C4.66943 4.96748 4.76878 4.96748 4.86813 4.96748C4.96748 4.96748 4.96748 4.96748 5.06683 4.96748C5.26553 4.96748 5.36488 4.86813 5.56358 4.66943C5.66293 4.57008 5.76228 4.37138 5.86163 4.17268C5.86163 3.97398 5.86163 3.77528 5.76228 3.67594C5.66293 3.47724 5.56358 3.37789 5.36488 3.27854C5.26553 3.17919 5.06683 3.07984 4.86813 3.07984Z"
              fill="#AEB3BA"
            />
          </Svg>
        );
      case 'kitchens':
        return (
          <Svg
            width={RFPercentage(2)}
            height={RFPercentage(2)}
            viewBox="0 0 16 13"
            fill="none"
            xmlns="http://www.w3.org/2000/svg">
            <Path
              d="M15.2998 12.22C15.1011 12.22 14.9024 12.1207 14.8031 12.0213C14.7037 11.922 14.6044 11.7233 14.6044 11.5246V8.94146H1.49024V11.5246C1.49024 11.7233 1.39089 11.922 1.29154 12.0213C1.1922 12.1207 0.993496 12.22 0.794797 12.22C0.596098 12.22 0.397398 12.1207 0.298049 12.0213C0.0993496 11.8226 0 11.7233 0 11.5246V0.695447C0 0.496748 0.0993496 0.298049 0.198699 0.198699C0.397398 0.0993496 0.496748 0 0.695447 0C0.894146 0 1.09285 0.0993496 1.1922 0.198699C1.29154 0.298049 1.39089 0.496748 1.39089 0.695447V7.45122H8.24602V2.38439C8.24602 2.18569 8.34537 1.98699 8.44471 1.88764C8.54406 1.78829 8.74276 1.68894 8.94146 1.68894H13.6109C14.207 1.68894 14.8031 1.88764 15.2998 2.38439C15.7966 2.88114 15.9953 3.47724 15.9953 4.07333V11.5246C15.9953 11.7233 15.8959 11.922 15.7966 12.0213C15.6972 12.1207 15.4985 12.22 15.2998 12.22ZM9.73626 7.45122H14.6044V4.07333C14.6044 3.87463 14.505 3.57659 14.3063 3.37789C14.1076 3.17919 13.9089 3.07984 13.6109 3.07984H9.73626V7.45122ZM4.86813 6.45772C4.27203 6.45772 3.67593 6.25902 3.17919 5.76228C2.68244 5.26553 2.48374 4.66943 2.48374 4.07333C2.48374 3.57659 2.58309 3.17919 2.88114 2.78179C3.17919 2.28504 3.47724 1.98699 3.97398 1.78829C4.27203 1.68894 4.57008 1.58959 4.86813 1.58959C5.06683 1.58959 5.16618 1.58959 5.36488 1.58959C5.76228 1.78829 6.25902 1.98699 6.55707 2.38439C6.85512 2.78179 7.15317 3.17919 7.25252 3.57659C7.35187 4.07333 7.25252 4.47073 7.15317 4.96748C6.85512 5.36488 6.55707 5.76228 6.15967 6.06033C5.76228 6.25902 5.36488 6.45772 4.86813 6.45772ZM4.86813 3.07984C4.57008 3.07984 4.37138 3.17919 4.17268 3.37789C4.07333 3.57659 3.97398 3.77528 3.97398 4.07333C3.97398 4.27203 3.97398 4.37138 4.07333 4.57008C4.17268 4.76878 4.27203 4.86813 4.47073 4.86813C4.66943 4.96748 4.76878 4.96748 4.86813 4.96748C4.96748 4.96748 4.96748 4.96748 5.06683 4.96748C5.26553 4.96748 5.36488 4.86813 5.56358 4.66943C5.66293 4.57008 5.76228 4.37138 5.86163 4.17268C5.86163 3.97398 5.86163 3.77528 5.76228 3.67594C5.66293 3.47724 5.56358 3.37789 5.36488 3.27854C5.26553 3.17919 5.06683 3.07984 4.86813 3.07984Z"
              fill="#AEB3BA"
            />
          </Svg>
        );
      case 'livingrooms':
        return (
          <Svg
            width={RFPercentage(2)}
            height={RFPercentage(2)}
            viewBox="0 0 16 13"
            fill="none"
            xmlns="http://www.w3.org/2000/svg">
            <Path
              d="M15.2998 12.22C15.1011 12.22 14.9024 12.1207 14.8031 12.0213C14.7037 11.922 14.6044 11.7233 14.6044 11.5246V8.94146H1.49024V11.5246C1.49024 11.7233 1.39089 11.922 1.29154 12.0213C1.1922 12.1207 0.993496 12.22 0.794797 12.22C0.596098 12.22 0.397398 12.1207 0.298049 12.0213C0.0993496 11.8226 0 11.7233 0 11.5246V0.695447C0 0.496748 0.0993496 0.298049 0.198699 0.198699C0.397398 0.0993496 0.496748 0 0.695447 0C0.894146 0 1.09285 0.0993496 1.1922 0.198699C1.29154 0.298049 1.39089 0.496748 1.39089 0.695447V7.45122H8.24602V2.38439C8.24602 2.18569 8.34537 1.98699 8.44471 1.88764C8.54406 1.78829 8.74276 1.68894 8.94146 1.68894H13.6109C14.207 1.68894 14.8031 1.88764 15.2998 2.38439C15.7966 2.88114 15.9953 3.47724 15.9953 4.07333V11.5246C15.9953 11.7233 15.8959 11.922 15.7966 12.0213C15.6972 12.1207 15.4985 12.22 15.2998 12.22ZM9.73626 7.45122H14.6044V4.07333C14.6044 3.87463 14.505 3.57659 14.3063 3.37789C14.1076 3.17919 13.9089 3.07984 13.6109 3.07984H9.73626V7.45122ZM4.86813 6.45772C4.27203 6.45772 3.67593 6.25902 3.17919 5.76228C2.68244 5.26553 2.48374 4.66943 2.48374 4.07333C2.48374 3.57659 2.58309 3.17919 2.88114 2.78179C3.17919 2.28504 3.47724 1.98699 3.97398 1.78829C4.27203 1.68894 4.57008 1.58959 4.86813 1.58959C5.06683 1.58959 5.16618 1.58959 5.36488 1.58959C5.76228 1.78829 6.25902 1.98699 6.55707 2.38439C6.85512 2.78179 7.15317 3.17919 7.25252 3.57659C7.35187 4.07333 7.25252 4.47073 7.15317 4.96748C6.85512 5.36488 6.55707 5.76228 6.15967 6.06033C5.76228 6.25902 5.36488 6.45772 4.86813 6.45772ZM4.86813 3.07984C4.57008 3.07984 4.37138 3.17919 4.17268 3.37789C4.07333 3.57659 3.97398 3.77528 3.97398 4.07333C3.97398 4.27203 3.97398 4.37138 4.07333 4.57008C4.17268 4.76878 4.27203 4.86813 4.47073 4.86813C4.66943 4.96748 4.76878 4.96748 4.86813 4.96748C4.96748 4.96748 4.96748 4.96748 5.06683 4.96748C5.26553 4.96748 5.36488 4.86813 5.56358 4.66943C5.66293 4.57008 5.76228 4.37138 5.86163 4.17268C5.86163 3.97398 5.86163 3.77528 5.76228 3.67594C5.66293 3.47724 5.56358 3.37789 5.36488 3.27854C5.26553 3.17919 5.06683 3.07984 4.86813 3.07984Z"
              fill="#AEB3BA"
            />
          </Svg>
        );
      case 'orientation':
        return (
          <Svg
            width={RFPercentage(2)}
            height={RFPercentage(2)}
            viewBox="0 0 16 13"
            fill="none"
            xmlns="http://www.w3.org/2000/svg">
            <Path
              d="M15.2998 12.22C15.1011 12.22 14.9024 12.1207 14.8031 12.0213C14.7037 11.922 14.6044 11.7233 14.6044 11.5246V8.94146H1.49024V11.5246C1.49024 11.7233 1.39089 11.922 1.29154 12.0213C1.1922 12.1207 0.993496 12.22 0.794797 12.22C0.596098 12.22 0.397398 12.1207 0.298049 12.0213C0.0993496 11.8226 0 11.7233 0 11.5246V0.695447C0 0.496748 0.0993496 0.298049 0.198699 0.198699C0.397398 0.0993496 0.496748 0 0.695447 0C0.894146 0 1.09285 0.0993496 1.1922 0.198699C1.29154 0.298049 1.39089 0.496748 1.39089 0.695447V7.45122H8.24602V2.38439C8.24602 2.18569 8.34537 1.98699 8.44471 1.88764C8.54406 1.78829 8.74276 1.68894 8.94146 1.68894H13.6109C14.207 1.68894 14.8031 1.88764 15.2998 2.38439C15.7966 2.88114 15.9953 3.47724 15.9953 4.07333V11.5246C15.9953 11.7233 15.8959 11.922 15.7966 12.0213C15.6972 12.1207 15.4985 12.22 15.2998 12.22ZM9.73626 7.45122H14.6044V4.07333C14.6044 3.87463 14.505 3.57659 14.3063 3.37789C14.1076 3.17919 13.9089 3.07984 13.6109 3.07984H9.73626V7.45122ZM4.86813 6.45772C4.27203 6.45772 3.67593 6.25902 3.17919 5.76228C2.68244 5.26553 2.48374 4.66943 2.48374 4.07333C2.48374 3.57659 2.58309 3.17919 2.88114 2.78179C3.17919 2.28504 3.47724 1.98699 3.97398 1.78829C4.27203 1.68894 4.57008 1.58959 4.86813 1.58959C5.06683 1.58959 5.16618 1.58959 5.36488 1.58959C5.76228 1.78829 6.25902 1.98699 6.55707 2.38439C6.85512 2.78179 7.15317 3.17919 7.25252 3.57659C7.35187 4.07333 7.25252 4.47073 7.15317 4.96748C6.85512 5.36488 6.55707 5.76228 6.15967 6.06033C5.76228 6.25902 5.36488 6.45772 4.86813 6.45772ZM4.86813 3.07984C4.57008 3.07984 4.37138 3.17919 4.17268 3.37789C4.07333 3.57659 3.97398 3.77528 3.97398 4.07333C3.97398 4.27203 3.97398 4.37138 4.07333 4.57008C4.17268 4.76878 4.27203 4.86813 4.47073 4.86813C4.66943 4.96748 4.76878 4.96748 4.86813 4.96748C4.96748 4.96748 4.96748 4.96748 5.06683 4.96748C5.26553 4.96748 5.36488 4.86813 5.56358 4.66943C5.66293 4.57008 5.76228 4.37138 5.86163 4.17268C5.86163 3.97398 5.86163 3.77528 5.76228 3.67594C5.66293 3.47724 5.56358 3.37789 5.36488 3.27854C5.26553 3.17919 5.06683 3.07984 4.86813 3.07984Z"
              fill="#AEB3BA"
            />
          </Svg>
        );
      case 'parking':
        return (
          <Svg
            width={RFPercentage(2)}
            height={RFPercentage(2)}
            viewBox="0 0 16 13"
            fill="none"
            xmlns="http://www.w3.org/2000/svg">
            <Path
              d="M15.2998 12.22C15.1011 12.22 14.9024 12.1207 14.8031 12.0213C14.7037 11.922 14.6044 11.7233 14.6044 11.5246V8.94146H1.49024V11.5246C1.49024 11.7233 1.39089 11.922 1.29154 12.0213C1.1922 12.1207 0.993496 12.22 0.794797 12.22C0.596098 12.22 0.397398 12.1207 0.298049 12.0213C0.0993496 11.8226 0 11.7233 0 11.5246V0.695447C0 0.496748 0.0993496 0.298049 0.198699 0.198699C0.397398 0.0993496 0.496748 0 0.695447 0C0.894146 0 1.09285 0.0993496 1.1922 0.198699C1.29154 0.298049 1.39089 0.496748 1.39089 0.695447V7.45122H8.24602V2.38439C8.24602 2.18569 8.34537 1.98699 8.44471 1.88764C8.54406 1.78829 8.74276 1.68894 8.94146 1.68894H13.6109C14.207 1.68894 14.8031 1.88764 15.2998 2.38439C15.7966 2.88114 15.9953 3.47724 15.9953 4.07333V11.5246C15.9953 11.7233 15.8959 11.922 15.7966 12.0213C15.6972 12.1207 15.4985 12.22 15.2998 12.22ZM9.73626 7.45122H14.6044V4.07333C14.6044 3.87463 14.505 3.57659 14.3063 3.37789C14.1076 3.17919 13.9089 3.07984 13.6109 3.07984H9.73626V7.45122ZM4.86813 6.45772C4.27203 6.45772 3.67593 6.25902 3.17919 5.76228C2.68244 5.26553 2.48374 4.66943 2.48374 4.07333C2.48374 3.57659 2.58309 3.17919 2.88114 2.78179C3.17919 2.28504 3.47724 1.98699 3.97398 1.78829C4.27203 1.68894 4.57008 1.58959 4.86813 1.58959C5.06683 1.58959 5.16618 1.58959 5.36488 1.58959C5.76228 1.78829 6.25902 1.98699 6.55707 2.38439C6.85512 2.78179 7.15317 3.17919 7.25252 3.57659C7.35187 4.07333 7.25252 4.47073 7.15317 4.96748C6.85512 5.36488 6.55707 5.76228 6.15967 6.06033C5.76228 6.25902 5.36488 6.45772 4.86813 6.45772ZM4.86813 3.07984C4.57008 3.07984 4.37138 3.17919 4.17268 3.37789C4.07333 3.57659 3.97398 3.77528 3.97398 4.07333C3.97398 4.27203 3.97398 4.37138 4.07333 4.57008C4.17268 4.76878 4.27203 4.86813 4.47073 4.86813C4.66943 4.96748 4.76878 4.96748 4.86813 4.96748C4.96748 4.96748 4.96748 4.96748 5.06683 4.96748C5.26553 4.96748 5.36488 4.86813 5.56358 4.66943C5.66293 4.57008 5.76228 4.37138 5.86163 4.17268C5.86163 3.97398 5.86163 3.77528 5.76228 3.67594C5.66293 3.47724 5.56358 3.37789 5.36488 3.27854C5.26553 3.17919 5.06683 3.07984 4.86813 3.07984Z"
              fill="#AEB3BA"
            />
          </Svg>
        );
      case 'plotsize':
        return (
          <Svg
            width={RFPercentage(2)}
            height={RFPercentage(2)}
            viewBox="0 0 16 13"
            fill="none"
            xmlns="http://www.w3.org/2000/svg">
            <Path
              d="M15.2998 12.22C15.1011 12.22 14.9024 12.1207 14.8031 12.0213C14.7037 11.922 14.6044 11.7233 14.6044 11.5246V8.94146H1.49024V11.5246C1.49024 11.7233 1.39089 11.922 1.29154 12.0213C1.1922 12.1207 0.993496 12.22 0.794797 12.22C0.596098 12.22 0.397398 12.1207 0.298049 12.0213C0.0993496 11.8226 0 11.7233 0 11.5246V0.695447C0 0.496748 0.0993496 0.298049 0.198699 0.198699C0.397398 0.0993496 0.496748 0 0.695447 0C0.894146 0 1.09285 0.0993496 1.1922 0.198699C1.29154 0.298049 1.39089 0.496748 1.39089 0.695447V7.45122H8.24602V2.38439C8.24602 2.18569 8.34537 1.98699 8.44471 1.88764C8.54406 1.78829 8.74276 1.68894 8.94146 1.68894H13.6109C14.207 1.68894 14.8031 1.88764 15.2998 2.38439C15.7966 2.88114 15.9953 3.47724 15.9953 4.07333V11.5246C15.9953 11.7233 15.8959 11.922 15.7966 12.0213C15.6972 12.1207 15.4985 12.22 15.2998 12.22ZM9.73626 7.45122H14.6044V4.07333C14.6044 3.87463 14.505 3.57659 14.3063 3.37789C14.1076 3.17919 13.9089 3.07984 13.6109 3.07984H9.73626V7.45122ZM4.86813 6.45772C4.27203 6.45772 3.67593 6.25902 3.17919 5.76228C2.68244 5.26553 2.48374 4.66943 2.48374 4.07333C2.48374 3.57659 2.58309 3.17919 2.88114 2.78179C3.17919 2.28504 3.47724 1.98699 3.97398 1.78829C4.27203 1.68894 4.57008 1.58959 4.86813 1.58959C5.06683 1.58959 5.16618 1.58959 5.36488 1.58959C5.76228 1.78829 6.25902 1.98699 6.55707 2.38439C6.85512 2.78179 7.15317 3.17919 7.25252 3.57659C7.35187 4.07333 7.25252 4.47073 7.15317 4.96748C6.85512 5.36488 6.55707 5.76228 6.15967 6.06033C5.76228 6.25902 5.36488 6.45772 4.86813 6.45772ZM4.86813 3.07984C4.57008 3.07984 4.37138 3.17919 4.17268 3.37789C4.07333 3.57659 3.97398 3.77528 3.97398 4.07333C3.97398 4.27203 3.97398 4.37138 4.07333 4.57008C4.17268 4.76878 4.27203 4.86813 4.47073 4.86813C4.66943 4.96748 4.76878 4.96748 4.86813 4.96748C4.96748 4.96748 4.96748 4.96748 5.06683 4.96748C5.26553 4.96748 5.36488 4.86813 5.56358 4.66943C5.66293 4.57008 5.76228 4.37138 5.86163 4.17268C5.86163 3.97398 5.86163 3.77528 5.76228 3.67594C5.66293 3.47724 5.56358 3.37789 5.36488 3.27854C5.26553 3.17919 5.06683 3.07984 4.86813 3.07984Z"
              fill="#AEB3BA"
            />
          </Svg>
        );
      default:
        return (
          <Svg
            width={RFPercentage(2)}
            height={RFPercentage(2)}
            viewBox="0 0 16 13"
            fill="none"
            xmlns="http://www.w3.org/2000/svg">
            <Path
              d="M15.2998 12.22C15.1011 12.22 14.9024 12.1207 14.8031 12.0213C14.7037 11.922 14.6044 11.7233 14.6044 11.5246V8.94146H1.49024V11.5246C1.49024 11.7233 1.39089 11.922 1.29154 12.0213C1.1922 12.1207 0.993496 12.22 0.794797 12.22C0.596098 12.22 0.397398 12.1207 0.298049 12.0213C0.0993496 11.8226 0 11.7233 0 11.5246V0.695447C0 0.496748 0.0993496 0.298049 0.198699 0.198699C0.397398 0.0993496 0.496748 0 0.695447 0C0.894146 0 1.09285 0.0993496 1.1922 0.198699C1.29154 0.298049 1.39089 0.496748 1.39089 0.695447V7.45122H8.24602V2.38439C8.24602 2.18569 8.34537 1.98699 8.44471 1.88764C8.54406 1.78829 8.74276 1.68894 8.94146 1.68894H13.6109C14.207 1.68894 14.8031 1.88764 15.2998 2.38439C15.7966 2.88114 15.9953 3.47724 15.9953 4.07333V11.5246C15.9953 11.7233 15.8959 11.922 15.7966 12.0213C15.6972 12.1207 15.4985 12.22 15.2998 12.22ZM9.73626 7.45122H14.6044V4.07333C14.6044 3.87463 14.505 3.57659 14.3063 3.37789C14.1076 3.17919 13.9089 3.07984 13.6109 3.07984H9.73626V7.45122ZM4.86813 6.45772C4.27203 6.45772 3.67593 6.25902 3.17919 5.76228C2.68244 5.26553 2.48374 4.66943 2.48374 4.07333C2.48374 3.57659 2.58309 3.17919 2.88114 2.78179C3.17919 2.28504 3.47724 1.98699 3.97398 1.78829C4.27203 1.68894 4.57008 1.58959 4.86813 1.58959C5.06683 1.58959 5.16618 1.58959 5.36488 1.58959C5.76228 1.78829 6.25902 1.98699 6.55707 2.38439C6.85512 2.78179 7.15317 3.17919 7.25252 3.57659C7.35187 4.07333 7.25252 4.47073 7.15317 4.96748C6.85512 5.36488 6.55707 5.76228 6.15967 6.06033C5.76228 6.25902 5.36488 6.45772 4.86813 6.45772ZM4.86813 3.07984C4.57008 3.07984 4.37138 3.17919 4.17268 3.37789C4.07333 3.57659 3.97398 3.77528 3.97398 4.07333C3.97398 4.27203 3.97398 4.37138 4.07333 4.57008C4.17268 4.76878 4.27203 4.86813 4.47073 4.86813C4.66943 4.96748 4.76878 4.96748 4.86813 4.96748C4.96748 4.96748 4.96748 4.96748 5.06683 4.96748C5.26553 4.96748 5.36488 4.86813 5.56358 4.66943C5.66293 4.57008 5.76228 4.37138 5.86163 4.17268C5.86163 3.97398 5.86163 3.77528 5.76228 3.67594C5.66293 3.47724 5.56358 3.37789 5.36488 3.27854C5.26553 3.17919 5.06683 3.07984 4.86813 3.07984Z"
              fill="#AEB3BA"
            />
          </Svg>
        );
    }
  };
  renName = (item, key) => {
    switch (key) {
      case 'amountrooms':
        return (
          <Text
            style={{
              color: '#AEB3BA',
              fontSize: RFPercentage(2),
              marginLeft: 2,
            }}>
            amou
          </Text>
        );
      case 'areasize':
        return (
          <Text
            style={{
              color: '#AEB3BA',
              fontSize: RFPercentage(2),
              marginLeft: 2,
            }}>
            sqft
          </Text>
        );
      case 'bathrooms':
        return (
          <Text
            style={{
              color: '#AEB3BA',
              fontSize: RFPercentage(2),
              marginLeft: 2,
            }}>
            ba
          </Text>
        );
      case 'bedrooms':
        return (
          <Text
            style={{
              color: '#AEB3BA',
              fontSize: RFPercentage(2),
              marginLeft: 2,
            }}>
            bds
          </Text>
        );
      case 'builtyear':
        return (
          <Text
            style={{
              color: '#AEB3BA',
              fontSize: RFPercentage(2),
              marginLeft: 2,
            }}>
            bly
          </Text>
        );
      case 'kitchens':
        return (
          <Text
            style={{
              color: '#AEB3BA',
              fontSize: RFPercentage(2),
              marginLeft: 2,
            }}>
            kir
          </Text>
        );
      case 'livingrooms':
        return (
          <Text
            style={{
              color: '#AEB3BA',
              fontSize: RFPercentage(2),
              marginLeft: 2,
            }}>
            liv
          </Text>
        );
      case 'orientation':
        return (
          <Text
            style={{
              color: '#AEB3BA',
              fontSize: RFPercentage(2),
              marginLeft: 2,
            }}>
            ori
          </Text>
        );
      case 'parking':
        return (
          <Text
            style={{
              color: '#AEB3BA',
              fontSize: RFPercentage(2),
              marginLeft: 2,
            }}>
            par
          </Text>
        );
      case 'plotsize':
        return (
          <Text
            style={{
              color: '#AEB3BA',
              fontSize: RFPercentage(2),
              marginLeft: 2,
            }}>
            plo
          </Text>
        );
      default:
        return (
          <Text
            style={{
              color: '#AEB3BA',
              fontSize: RFPercentage(2),
              marginLeft: 2,
            }}>
            {key}
          </Text>
        );
    }
  };

  _renderTruncatedFooter = handlePress => {
    return (
      <Text
        style={{color: '#7159c1', marginTop: 5, fontSize: RFPercentage(2.3)}}
        onPress={handlePress}>
        + Show more
      </Text>
    );
  };

  _renderRevealedFooter = handlePress => {
    return (
      <Text
        style={{color: '#7159c1', marginTop: 5, fontSize: RFPercentage(2.3)}}
        onPress={handlePress}>
        - Show less
      </Text>
    );
  };

  update_Layout = index => {
    LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);

    const array = [...this.state.AccordionData];

    array[index].expanded = !array[index].expanded;

    this.setState(() => {
      return {
        AccordionData: array,
      };
    });
  };

  render() {
    const {navigation} = this.props;
    const property = this.props.navigation.state.params;
    return (
      <View style={styles.container}>
        <View style={{width: '100%'}}>
          <ScrollView>
            <Carousel
              data={property.item.gallery}
              autoplay={false}
              renderItem={this._renderItem}
              sliderWidth={viewportWidth}
              itemWidth={viewportWidth}
              inactiveSlideScale={0.95}
              layout={'default'}
              inactiveSlideOpacity={1}
              enableMomentum={true}
              activeSlideAlignment={'start'}
              activeAnimationType={'spring'}
              activeAnimationOptions={{
                friction: 4,
                tension: 40,
              }}
            />
            <View
              style={{
                justifyContent: 'center',
                alignItems: 'center',
              }}>
              <View style={styles.Cardtitle}>
                <View
                  style={{
                    position: 'absolute',
                    flexDirection: 'row',
                    top: -15,
                    height: 23,
                    left: 20,
                    width: viewportWidth,
                  }}>
                  {property.item.labels.map(item => {
                    return (
                      <View
                        key={item.term_id}
                        style={{
                          marginRight: 10,
                          backgroundColor: `${
                            item.meta.opalestate_label_lb_bg
                          }`,
                          height: 23,
                          width: 60,
                          justifyContent: 'center',
                          alignItems: 'center',
                          borderRadius: 4,
                        }}>
                        <Text style={{color: '#fff'}}>{item.name}</Text>
                      </View>
                    );
                  })}
                </View>
                <Text style={{fontSize: RFPercentage(3.2), fontWeight: 'bold'}}>
                  {property.item.address}
                </Text>
                <View
                  style={{
                    flexDirection: 'row',
                    width: '100%',
                  }}>
                  <Text style={{color: '#5F6870'}}>House </Text>
                  {property.item.statuses.map(item => {
                    return (
                      <View
                        key={item.term_id}
                        style={{
                          height: 23,
                          width: 'auto',
                          justifyContent: 'center',
                          alignItems: 'center',
                        }}>
                        <Text style={{color: '#5F6870'}}>
                          {'  |  '}
                          {item.name}
                        </Text>
                      </View>
                    );
                  })}
                </View>
                <View
                  style={{
                    flexDirection: 'row',
                    marginTop: 5,
                  }}>
                  <Text
                    style={{
                      color: '#6923E7',
                      fontWeight: 'bold',
                      fontSize: RFPercentage(3.8),
                    }}>
                    ${property.item.price.replace('&#36;', '')}
                  </Text>
                  <Text
                    style={{
                      fontWeight: 'bold',
                      fontSize: RFPercentage(2.8),
                      color: '#5F6870',
                    }}>
                    /month
                  </Text>
                </View>
                <View
                  style={{
                    height: 'auto',
                    marginTop: 5,
                    flexDirection: 'row',
                    flexWrap: 'wrap',
                  }}>
                  {Object.keys(property.item.short_info).map(key => {
                    return (
                      <View
                        key={key}
                        style={{
                          paddingRight: 20,
                          marginRight: 5,
                          marginTop: 5,
                          height: RFPercentage(3),
                          flexDirection: 'row',
                        }}>
                        {this.renIcon(property.item.short_info[key], key)}
                        <Text
                          style={{
                            color: '#AEB3BA',
                            fontSize: RFPercentage(2.4),
                            marginLeft: 2,
                          }}>
                          {property.item.short_info[key].value}
                        </Text>
                        {this.renName(property.item.short_info[key], key)}
                      </View>
                    );
                  })}
                </View>
                <View
                  style={{
                    marginTop: 12,
                    height: 30,
                  }}>
                  <Button
                    buttonStyle={{backgroundColor: '#6923E7'}}
                    icon={
                      <View style={{margin: 10}}>
                        <Svg
                          width="20"
                          height="18"
                          viewBox="0 0 20 18"
                          fill="none"
                          xmlns="http://www.w3.org/2000/svg">
                          <Path
                            d="M10 17.6667C9.83333 17.6667 9.66667 17.6667 9.58333 17.5833C6 15.75 0 11.8333 0 6.25C0 2.83333 2.41667 0.0833333 5.5 0.0833333C7.58333 0.0833333 9.08333 1.08333 10 1.91667L10.0833 1.83333C11 1 12.4167 0 14.5833 0C17.5833 0.0833333 20 2.83333 20 6.25C20 11.8333 14 15.75 10.4167 17.5833C10.3333 17.6667 10.1667 17.6667 10 17.6667ZM5.5 1.91667C3.16667 1.91667 1.91667 4.16667 1.91667 6.25C1.91667 10.6667 7 14.0833 10 15.6667C13.0833 14.0833 18.1667 10.6667 18.1667 6.25C18.1667 4.16667 16.9167 1.91667 14.5833 1.91667C12.1667 1.91667 10.9167 3.75 10.8333 3.83333C10.6667 4.08333 10.3333 4.25 10.0833 4.25C9.75 4.25 9.5 4.08333 9.33333 3.83333C8.58333 2.91667 7.16667 1.91667 5.5 1.91667Z"
                            fill="white"
                          />
                        </Svg>
                      </View>
                    }
                    title="ADD TO FAVORITE"
                  />
                </View>
              </View>
              <View
                style={{
                  marginTop: 250,
                  paddingRight: 20,
                  paddingLeft: 20,
                  width: '90%',
                }}>
                <Text
                  style={{
                    fontSize: RFPercentage(2.8),
                    fontWeight: 'bold',
                    marginBottom: 5,
                  }}>
                  Description
                </Text>
                <ReadMore
                  numberOfLines={8}
                  renderTruncatedFooter={this._renderTruncatedFooter}
                  renderRevealedFooter={this._renderRevealedFooter}>
                  <Text
                    style={{
                      marginTop: 10,
                      color: '#5F6870',
                      fontSize: RFPercentage(2),
                      letterSpacing: 0.7,
                    }}>
                    {property.item.content}
                  </Text>
                </ReadMore>
              </View>
              <View style={{width: '90%', marginTop: 10,marginBottom:100}}>
                {this.state.AccordionData.map((item, key) => (
                  <Expandable_ListView
                    key={item.category_Name}
                    onClickFunction={this.update_Layout.bind(this, key)}
                    item={item}
                  />
                ))}
              </View>
            </View>
          </ScrollView>
          {/*<ActionButton*/}
          {/*  buttonColor="#8e5cf1"*/}
          {/*  onPress={() => {*/}
          {/*    navigation.navigate('MAPS', property.item.map);*/}
          {/*  }}*/}
          {/*  renderIcon={this.renderIcon}*/}
          {/*/>*/}
        </View>
      </View>
    );
  }
}
const dataArray = [
  {title: 'First Element', content: 'Lorem ipsum dolor sit amet'},
  {title: 'Second Element', content: 'Lorem ipsum dolor sit amet'},
  {title: 'Third Element', content: 'Lorem ipsum dolor sit amet'},
];

const mapStateToProps = state => {
  return {DetailRequest: state.detail};
};

const mapDispatchToProps = dispatch =>
  bindActionCreators(DetailCreators, dispatch);

export default connect(
  mapStateToProps,
  mapDispatchToProps,
)(withNavigation(Detail));
